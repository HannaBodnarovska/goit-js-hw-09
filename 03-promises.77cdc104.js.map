{"mappings":"AAAAA,KAAKC,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAEN,IAAMC,EAAaC,SAASL,KAAKM,SAASC,MAAMC,OAC1CC,EAAOJ,SAASL,KAAKM,SAASG,KAAKD,OACnCE,EAASL,SAASL,KAAKM,SAASI,OAAOF,OAE7CG,SAASC,QAAQC,MAAM,0BAGvB,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAChC,IAAMR,EAAQH,GAAcW,EAAI,GAAKN,EACrCK,EAASE,KAAKC,cAAcF,EAAGR,G,CAGjCW,QAAQC,IAAIL,EAASM,KAAI,SAAAC,G,OAAWA,EAAQC,OAAM,SAAAC,G,OAAKA,C,QACpDC,MAAK,SAAAC,GACJd,SAASC,QAAQc,SACjBD,EAAQE,SAAQ,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUtB,EAAKqB,EAALrB,MAC3BuB,YAAW,WACQ,IAAbD,EACFlB,SAASoB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAAN1B,EAAM,OAEpEI,SAAOoB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAAN1B,EAAM,MAAK,CAAEsB,SAAU,Y,GAExFtB,E,OAGNe,OAAM,SAAAG,GACLd,SAASC,QAAQc,SACjBD,EAAQE,SAAQ,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUtB,EAAKqB,EAALrB,MAC3BuB,YAAW,WACQ,IAAbD,EACFlB,SAASoB,OAAOG,QAAQ,sBAAuCD,OAAfJ,EAAS,QAAYI,OAAN1B,EAAM,OAEnEI,SAAOoB,OAAOG,QAAQ,sBAAqCD,OAAfJ,EAAS,QAAYI,OAAN1B,EAAM,MAAK,CAAEsB,SAAU,Y,GAErFtB,E","sources":["src/js/03-promises.js"],"sourcesContent":["form.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const firstDelay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  Notiflix.Loading.pulse('Generating promises...');\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    const delay = firstDelay + (i - 1) * step;\n    promises.push(createPromise(i, delay));\n  }\n\n  Promise.all(promises.map(promise => promise.catch(e => e)))\n    .then(results => {\n      Notiflix.Loading.remove();\n      results.forEach(({ position, delay }) => {\n        setTimeout(() => {\n          if (position === 1) {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          } else {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { position: 'topRight' });\n          }\n        }, delay);\n      });\n    })\n    .catch(results => {\n      Notiflix.Loading.remove();\n      results.forEach(({ position, delay }) => {\n        setTimeout(() => {\n          if (position === 1) {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          } else {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { position: 'topRight' });\n          }\n        }, delay);\n      });\n    });\n});\n"],"names":["form","addEventListener","event","preventDefault","firstDelay","parseInt","elements","delay","value","step","amount","Notiflix","Loading","pulse","promises","i","push","createPromise","Promise","all","map","promise","catch","e","then","results","remove","forEach","param","position","setTimeout","Notify","success","concat","failure"],"version":3,"file":"03-promises.77cdc104.js.map"}