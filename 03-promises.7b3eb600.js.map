{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SACpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,G,CAKjCL,EAAKW,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAEN,MAAMC,EAAaC,SAASf,EAAKgB,SAASX,MAAMY,OAC1CC,EAAOH,SAASf,EAAKgB,SAASE,KAAKD,OACnCE,EAASJ,SAASf,EAAKgB,SAASG,OAAOF,OAE7CG,EAAAtB,GAASuB,QAAQC,MAAM,0BAEvB,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAChC,MAAMnB,EAAQS,GAAcU,EAAI,GAAKN,EACrCK,EAASE,KAAKtB,EAAcqB,EAAGnB,G,CAGjCC,QAAQoB,IAAIH,EAASI,KAAIC,GAAWA,EAAQC,OAAMC,GAAKA,OACpDC,MAAKC,IACJZ,EAAAtB,GAASuB,QAAQY,SACjBD,EAAQE,SAAQ,EAAC9B,SAAEA,EAAQC,MAAEA,MACV,IAAbD,EACFgB,EAAAtB,GAASqC,OAAOC,QAAQ,uBAAqBhC,QAAiBC,OAE9De,EAAAtB,GAASqC,OAAOC,QAAQ,uBAAqBhC,QAAiBC,MAAW,CAAID,SAAU,YAAa,GAEtG,IAEHyB,OAAMG,IACLZ,EAAAtB,GAASuB,QAAQY,SACjBD,EAAQE,SAAQ,EAAC9B,SAAEA,EAAQC,MAAEA,MACV,IAAbD,EACFgB,EAAAtB,GAASqC,OAAOE,QAAQ,sBAAoBjC,QAAiBC,OAE7De,EAAAtB,GAASqC,OAAOE,QAAQ,sBAAoBjC,QAAeC,MAAW,CAAID,SAAU,YAAa,GAEnG,GACF","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst form = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const firstDelay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  Notiflix.Loading.pulse('Generating promises...');\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    const delay = firstDelay + (i - 1) * step;\n    promises.push(createPromise(i, delay));\n  }\n\n  Promise.all(promises.map(promise => promise.catch(e => e)))\n    .then(results => {\n      Notiflix.Loading.remove();\n      results.forEach(({ position, delay }) => {\n        if (position === 1) {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { position: 'topRight' });\n        }\n      });\n    })\n    .catch(results => {\n      Notiflix.Loading.remove();\n      results.forEach(({ position, delay }) => {\n        if (position === 1) {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        } else {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { position: 'topRight' });\n        }\n      });\n    });\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","event","preventDefault","firstDelay","parseInt","elements","value","step","amount","$parcel$interopDefault","Loading","pulse","promises","i","push","all","map","promise","catch","e","then","results","remove","forEach","Notify","success","failure"],"version":3,"file":"03-promises.7b3eb600.js.map"}