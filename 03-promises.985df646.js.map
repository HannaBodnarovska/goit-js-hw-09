{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SACpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,IAKzBL,EAAKW,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAEN,IAAMC,EAAaC,SAASf,EAAKgB,SAASX,MAAMY,OAC1CC,EAAOH,SAASf,EAAKgB,SAASE,KAAKD,OACnCE,EAASJ,SAASf,EAAKgB,SAASG,OAAOF,OAE7CG,EAAAtB,GAASuB,QAAQC,MAAM,0BAGvB,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAChC,IAAMnB,EAAQS,GAAcU,EAAI,GAAKN,EACrCK,EAASE,KAAKtB,EAAcqB,EAAGnB,G,CAGjCC,QAAQoB,IAAIH,EAASI,KAAI,SAAAC,G,OAAWA,EAAQC,OAAM,SAAAC,G,OAAKA,C,QACpDC,MAAK,SAAAC,GACJZ,EAAAtB,GAASuB,QAAQY,SACjBD,EAAQE,SAAQ,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACV,IAAbD,EACFgB,EAAAtB,GAASsC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,OAEtEe,EAAAtB,GAASsC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,MAAK,CAAED,SAAU,Y,OAI5FyB,OAAM,SAAAG,GACLZ,EAAAtB,GAASuB,QAAQY,SACjBD,EAAQE,SAAQ,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACV,IAAbD,EACFgB,EAAAtB,GAASsC,OAAOG,QAAQ,sBAAuCD,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,OAErEe,EAAAtB,GAASsC,OAAOG,QAAQ,sBAAqCD,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,MAAK,CAAED,SAAU,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst form = document.querySelector('.form');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const firstDelay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  Notiflix.Loading.pulse('Generating promises...');\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    const delay = firstDelay + (i - 1) * step;\n    promises.push(createPromise(i, delay));\n  }\n\n  Promise.all(promises.map(promise => promise.catch(e => e)))\n    .then(results => {\n      Notiflix.Loading.remove();\n      results.forEach(({ position, delay }) => {\n        if (position === 1) {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { position: 'topRight' });\n        }\n      });\n    })\n    .catch(results => {\n      Notiflix.Loading.remove();\n      results.forEach(({ position, delay }) => {\n        if (position === 1) {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        } else {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { position: 'topRight' });\n        }\n      });\n    });\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","event","preventDefault","firstDelay","parseInt","elements","value","step","amount","$parcel$interopDefault","Loading","pulse","promises","i","push","all","map","promise","catch","e","then","results","remove","forEach","param","Notify","success","concat","failure"],"version":3,"file":"03-promises.985df646.js.map"}